<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classgr_1_1limesdr_1_1source__impl" kind="class" language="C++" prot="public">
    <compoundname>gr::limesdr::source_impl</compoundname>
    <basecompoundref refid="classgr_1_1limesdr_1_1source" prot="public" virt="non-virtual">gr::limesdr::source</basecompoundref>
    <includes refid="source__impl_8h" local="no">source_impl.h</includes>
    <innerclass refid="structgr_1_1limesdr_1_1source__impl_1_1constant__data" prot="private">gr::limesdr::source_impl::constant_data</innerclass>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classgr_1_1limesdr_1_1source__impl_1a0def2512e95ca8a5c630d1a8380d5644" prot="private" static="no" mutable="no">
        <type>lms_stream_t</type>
        <definition>lms_stream_t gr::limesdr::source_impl::streamId[2]</definition>
        <argsstring>[2]</argsstring>
        <name>streamId</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hydra/gnuradio/src/gr-limesdr/lib/source_impl.h" line="34" column="18" bodyfile="/home/hydra/gnuradio/src/gr-limesdr/lib/source_impl.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgr_1_1limesdr_1_1source__impl_1ab8d530b33deb1626d0f13d9fad4064a9" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool gr::limesdr::source_impl::stream_analyzer</definition>
        <argsstring></argsstring>
        <name>stream_analyzer</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hydra/gnuradio/src/gr-limesdr/lib/source_impl.h" line="36" column="10" bodyfile="/home/hydra/gnuradio/src/gr-limesdr/lib/source_impl.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgr_1_1limesdr_1_1source__impl_1a0ee763b6b767a9cc805351dd028baa8f" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int gr::limesdr::source_impl::source_block</definition>
        <argsstring></argsstring>
        <name>source_block</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hydra/gnuradio/src/gr-limesdr/lib/source_impl.h" line="38" column="9" bodyfile="/home/hydra/gnuradio/src/gr-limesdr/lib/source_impl.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgr_1_1limesdr_1_1source__impl_1a716a9393ee9dc94eed9c16916ef469e0" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool gr::limesdr::source_impl::add_tag</definition>
        <argsstring></argsstring>
        <name>add_tag</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hydra/gnuradio/src/gr-limesdr/lib/source_impl.h" line="40" column="10" bodyfile="/home/hydra/gnuradio/src/gr-limesdr/lib/source_impl.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgr_1_1limesdr_1_1source__impl_1af93c06b7844ad76f20f39112a01f6d70" prot="private" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t gr::limesdr::source_impl::pktLoss</definition>
        <argsstring></argsstring>
        <name>pktLoss</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hydra/gnuradio/src/gr-limesdr/lib/source_impl.h" line="41" column="14" bodyfile="/home/hydra/gnuradio/src/gr-limesdr/lib/source_impl.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgr_1_1limesdr_1_1source__impl_1a1771423bf669838608397929a9f05d88" prot="private" static="no" mutable="no">
        <type>struct gr::limesdr::source_impl::constant_data</type>
        <definition>struct gr::limesdr::source_impl::constant_data gr::limesdr::source_impl::stored</definition>
        <argsstring></argsstring>
        <name>stored</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hydra/gnuradio/src/gr-limesdr/lib/source_impl.h" line="49" column="12"/>
      </memberdef>
      <memberdef kind="variable" id="classgr_1_1limesdr_1_1source__impl_1a9ebaba3636a4623f0c44d9964171474f" prot="private" static="no" mutable="no">
        <type>std::chrono::high_resolution_clock::time_point</type>
        <definition>std::chrono::high_resolution_clock::time_point gr::limesdr::source_impl::t1</definition>
        <argsstring></argsstring>
        <name>t1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hydra/gnuradio/src/gr-limesdr/lib/source_impl.h" line="51" column="52" bodyfile="/home/hydra/gnuradio/src/gr-limesdr/lib/source_impl.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgr_1_1limesdr_1_1source__impl_1ac0e7880102cb9374e1d1d5cc73c2686f" prot="private" static="no" mutable="no">
        <type>std::chrono::high_resolution_clock::time_point</type>
        <definition>std::chrono::high_resolution_clock::time_point gr::limesdr::source_impl::t2</definition>
        <argsstring></argsstring>
        <name>t2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hydra/gnuradio/src/gr-limesdr/lib/source_impl.h" line="51" column="55" bodyfile="/home/hydra/gnuradio/src/gr-limesdr/lib/source_impl.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classgr_1_1limesdr_1_1source__impl_1a81bfc4dcb1a78ad2d77e94e85ee15d96" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gr::limesdr::source_impl::print_stream_stats</definition>
        <argsstring>(lms_stream_status_t status)</argsstring>
        <name>print_stream_stats</name>
        <param>
          <type>lms_stream_status_t</type>
          <declname>status</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hydra/gnuradio/src/gr-limesdr/lib/source_impl.h" line="53" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classgr_1_1limesdr_1_1source__impl_1a50458c918f1c8b3f9eb4820e8d641aba" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gr::limesdr::source_impl::add_time_tag</definition>
        <argsstring>(int channel, lms_stream_meta_t meta)</argsstring>
        <name>add_time_tag</name>
        <param>
          <type>int</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>lms_stream_meta_t</type>
          <declname>meta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hydra/gnuradio/src/gr-limesdr/lib/source_impl.h" line="55" column="10"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgr_1_1limesdr_1_1source__impl_1a1124c8f562e88826df36fa46bda7ee39" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>gr::limesdr::source_impl::source_impl</definition>
        <argsstring>(std::string serial, int channel_mode, const std::string &amp;filename)</argsstring>
        <name>source_impl</name>
        <param>
          <type>std::string</type>
          <declname>serial</declname>
        </param>
        <param>
          <type>int</type>
          <declname>channel_mode</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hydra/gnuradio/src/gr-limesdr/lib/source_impl.h" line="58" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classgr_1_1limesdr_1_1source__impl_1a7b8ed5da0a9851638328c5b652529523" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>gr::limesdr::source_impl::~source_impl</definition>
        <argsstring>()</argsstring>
        <name>~source_impl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hydra/gnuradio/src/gr-limesdr/lib/source_impl.h" line="59" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classgr_1_1limesdr_1_1source__impl_1a0f695a287dc813fe50d182e14c5f2534" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gr::limesdr::source_impl::general_work</definition>
        <argsstring>(int noutput_items, gr_vector_int &amp;ninput_items, gr_vector_const_void_star &amp;input_items, gr_vector_void_star &amp;output_items)</argsstring>
        <name>general_work</name>
        <param>
          <type>int</type>
          <declname>noutput_items</declname>
        </param>
        <param>
          <type>gr_vector_int &amp;</type>
          <declname>ninput_items</declname>
        </param>
        <param>
          <type>gr_vector_const_void_star &amp;</type>
          <declname>input_items</declname>
        </param>
        <param>
          <type>gr_vector_void_star &amp;</type>
          <declname>output_items</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hydra/gnuradio/src/gr-limesdr/lib/source_impl.h" line="61" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classgr_1_1limesdr_1_1source__impl_1abfba88826a968ba63f0eeebf38e3043e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool gr::limesdr::source_impl::start</definition>
        <argsstring>(void)</argsstring>
        <name>start</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hydra/gnuradio/src/gr-limesdr/lib/source_impl.h" line="66" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classgr_1_1limesdr_1_1source__impl_1a6479b02e895c7d3bd5225dd10d55a987" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool gr::limesdr::source_impl::stop</definition>
        <argsstring>(void)</argsstring>
        <name>stop</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hydra/gnuradio/src/gr-limesdr/lib/source_impl.h" line="68" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classgr_1_1limesdr_1_1source__impl_1a07098eb7f4add98d389ae95cb54fade0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>gr::io_signature::sptr</type>
        <definition>gr::io_signature::sptr gr::limesdr::source_impl::args_to_io_signature</definition>
        <argsstring>(int channel_mode)</argsstring>
        <name>args_to_io_signature</name>
        <param>
          <type>int</type>
          <declname>channel_mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hydra/gnuradio/src/gr-limesdr/lib/source_impl.h" line="70" column="35"/>
      </memberdef>
      <memberdef kind="function" id="classgr_1_1limesdr_1_1source__impl_1a4e36c31aa000bbe34affac5428c59dc7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gr::limesdr::source_impl::init_stream</definition>
        <argsstring>(int device_number, int channel)</argsstring>
        <name>init_stream</name>
        <param>
          <type>int</type>
          <declname>device_number</declname>
        </param>
        <param>
          <type>int</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hydra/gnuradio/src/gr-limesdr/lib/source_impl.h" line="72" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classgr_1_1limesdr_1_1source__impl_1a044dc8fe2b86a8c7ea118ac31cd5ee38" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gr::limesdr::source_impl::release_stream</definition>
        <argsstring>(int device_number, lms_stream_t *stream)</argsstring>
        <name>release_stream</name>
        <param>
          <type>int</type>
          <declname>device_number</declname>
        </param>
        <param>
          <type>lms_stream_t *</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hydra/gnuradio/src/gr-limesdr/lib/source_impl.h" line="73" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classgr_1_1limesdr_1_1source__impl_1a0faa1a284f11c6668299f51b4282e86d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double gr::limesdr::source_impl::set_center_freq</definition>
        <argsstring>(double freq, size_t chan=0)</argsstring>
        <name>set_center_freq</name>
        <reimplements refid="classgr_1_1limesdr_1_1source_1adba834bd9e792f7436528cbdb77d7697">set_center_freq</reimplements>
        <param>
          <type>double</type>
          <declname>freq</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>chan</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set center frequency</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>freq</parametername>
</parameternamelist>
<parameterdescription>
<para>Frequency to set in Hz</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>chan</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel (not used)</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>actual center frequency in Hz </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hydra/gnuradio/src/gr-limesdr/lib/source_impl.h" line="75" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classgr_1_1limesdr_1_1source__impl_1a3bd6273b8795544fba229014cb910040" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void gr::limesdr::source_impl::set_antenna</definition>
        <argsstring>(int antenna, int channel=0)</argsstring>
        <name>set_antenna</name>
        <reimplements refid="classgr_1_1limesdr_1_1source_1af1907d82222150d77cd594a3b8249d2c">set_antenna</reimplements>
        <param>
          <type>int</type>
          <declname>antenna</declname>
        </param>
        <param>
          <type>int</type>
          <declname>channel</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set which antenna is used</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>antenna</parametername>
</parameternamelist>
<parameterdescription>
<para>Antenna to set: None(0), LNAH(1), LNAL(2), LNAW(3), AUTO(255)</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel selection: A(LMS_CH_0),B(LMS_CH_1). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hydra/gnuradio/src/gr-limesdr/lib/source_impl.h" line="77" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classgr_1_1limesdr_1_1source__impl_1a16a65efb2432da20a6305a2f65db9347" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void gr::limesdr::source_impl::set_nco</definition>
        <argsstring>(float nco_freq, int channel=0)</argsstring>
        <name>set_nco</name>
        <reimplements refid="classgr_1_1limesdr_1_1source_1a4fe10596978902a51d29a2a6b43e95dc">set_nco</reimplements>
        <param>
          <type>float</type>
          <declname>nco_freq</declname>
        </param>
        <param>
          <type>int</type>
          <declname>channel</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set NCO (numerically controlled oscillator). By selecting NCO frequency configure NCO. When NCO frequency is 0, NCO is off.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nco_freq</parametername>
</parameternamelist>
<parameterdescription>
<para>NCO frequency in Hz.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel index. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hydra/gnuradio/src/gr-limesdr/lib/source_impl.h" line="79" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classgr_1_1limesdr_1_1source__impl_1a409e68c0e1b907b49a43747aa33c77d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double gr::limesdr::source_impl::set_bandwidth</definition>
        <argsstring>(double analog_bandw, int channel=0)</argsstring>
        <name>set_bandwidth</name>
        <reimplements refid="classgr_1_1limesdr_1_1source_1ab1ac1b35e6dc05d8da0d36b3a5cb9e31">set_bandwidth</reimplements>
        <param>
          <type>double</type>
          <declname>analog_bandw</declname>
        </param>
        <param>
          <type>int</type>
          <declname>channel</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set analog filters.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>analog_bandw</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel filter bandwidth in Hz.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel selection: A(LMS_CH_0),B(LMS_CH_1).</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>actual filter bandwidth in Hz </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hydra/gnuradio/src/gr-limesdr/lib/source_impl.h" line="81" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classgr_1_1limesdr_1_1source__impl_1a364dc23ff74fdeceb2eb232d2b5a486d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void gr::limesdr::source_impl::set_digital_filter</definition>
        <argsstring>(double digital_bandw, int channel=0)</argsstring>
        <name>set_digital_filter</name>
        <reimplements refid="classgr_1_1limesdr_1_1source_1a6042356436bccb5a8b95bd93c026ad9f">set_digital_filter</reimplements>
        <param>
          <type>double</type>
          <declname>digital_bandw</declname>
        </param>
        <param>
          <type>int</type>
          <declname>channel</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set digital filters (GFIR).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>digital_bandw</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel filter bandwidth in Hz.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel selection: A(LMS_CH_0),B(LMS_CH_1). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hydra/gnuradio/src/gr-limesdr/lib/source_impl.h" line="83" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classgr_1_1limesdr_1_1source__impl_1a6678917ec79f432fd398b8e6d54d20d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>unsigned</type>
        <definition>unsigned gr::limesdr::source_impl::set_gain</definition>
        <argsstring>(unsigned gain_dB, int channel=0)</argsstring>
        <name>set_gain</name>
        <reimplements refid="classgr_1_1limesdr_1_1source_1a22d09b2a21f0fc58f444ecbc5f7c9622">set_gain</reimplements>
        <param>
          <type>unsigned</type>
          <declname>gain_dB</declname>
        </param>
        <param>
          <type>int</type>
          <declname>channel</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the combined gain value in dB</para>
<para><simplesect kind="note"><para>actual gain depends on LO frequency and analog LPF configuration and resulting output signal level may be different when those values are changed</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>gain_dB</parametername>
</parameternamelist>
<parameterdescription>
<para>Desired gain: [0,73] dB</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel selection: A(LMS_CH_0),B(LMS_CH_1).</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>actual gain in dB </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hydra/gnuradio/src/gr-limesdr/lib/source_impl.h" line="85" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classgr_1_1limesdr_1_1source__impl_1a0b5704a06ef83b5b1d446f2b3f40c61c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double gr::limesdr::source_impl::set_sample_rate</definition>
        <argsstring>(double rate)</argsstring>
        <name>set_sample_rate</name>
        <reimplements refid="classgr_1_1limesdr_1_1source_1af4faa5e9d62d527db40bd9171d229825">set_sample_rate</reimplements>
        <param>
          <type>double</type>
          <declname>rate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the same sample rate for both channels.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rate</parametername>
</parameternamelist>
<parameterdescription>
<para>Sample rate in S/s.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>actual sample rate in S/s </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hydra/gnuradio/src/gr-limesdr/lib/source_impl.h" line="87" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classgr_1_1limesdr_1_1source__impl_1a58d5481996ae1c17c2dfd9be38361914" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void gr::limesdr::source_impl::set_oversampling</definition>
        <argsstring>(int oversample)</argsstring>
        <name>set_oversampling</name>
        <reimplements refid="classgr_1_1limesdr_1_1source_1af9b247b22ddabe66e01927ca8e66ae3a">set_oversampling</reimplements>
        <param>
          <type>int</type>
          <declname>oversample</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set oversampling for both channels.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>oversample</parametername>
</parameternamelist>
<parameterdescription>
<para>Oversampling value (0 (default),1,2,4,8,16,32). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hydra/gnuradio/src/gr-limesdr/lib/source_impl.h" line="89" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classgr_1_1limesdr_1_1source__impl_1a5d6347f8713ba77cd9f3b3868d2b0d86" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void gr::limesdr::source_impl::set_buffer_size</definition>
        <argsstring>(uint32_t size)</argsstring>
        <name>set_buffer_size</name>
        <reimplements refid="classgr_1_1limesdr_1_1source_1a781e3bb153a6da5d43bbb454a59e730a">set_buffer_size</reimplements>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set stream buffer size</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>FIFO buffer size in samples </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hydra/gnuradio/src/gr-limesdr/lib/source_impl.h" line="91" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classgr_1_1limesdr_1_1source__impl_1a4584770cfe93c08ec0f378cb5f630c86" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void gr::limesdr::source_impl::calibrate</definition>
        <argsstring>(double bandw, int channel=0)</argsstring>
        <name>calibrate</name>
        <reimplements refid="classgr_1_1limesdr_1_1source_1aa3b7226a6d39fb9118d4da0425e4029a">calibrate</reimplements>
        <param>
          <type>double</type>
          <declname>bandw</declname>
        </param>
        <param>
          <type>int</type>
          <declname>channel</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Perform device calibration.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bandw</parametername>
</parameternamelist>
<parameterdescription>
<para>Set calibration bandwidth in Hz.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel selection: A(LMS_CH_0),B(LMS_CH_1). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hydra/gnuradio/src/gr-limesdr/lib/source_impl.h" line="93" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classgr_1_1limesdr_1_1source__impl_1a7a839ff58c807cedc1ccd084c2d93088" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void gr::limesdr::source_impl::set_tcxo_dac</definition>
        <argsstring>(uint16_t dacVal=125)</argsstring>
        <name>set_tcxo_dac</name>
        <reimplements refid="classgr_1_1limesdr_1_1source_1a842b2eaed035a66d0840163c67828049">set_tcxo_dac</reimplements>
        <param>
          <type>uint16_t</type>
          <declname>dacVal</declname>
          <defval>125</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set TCXO DAC. <simplesect kind="note"><para>Care must be taken as this parameter is returned to default value only after power off. </para>
</simplesect>
<simplesect kind="note"><para>LimeSDR-Mini default value is 180 range is [0,255] LimeSDR-USB default value is 125 range is [0,255] LimeSDR-PCIe default value is 134 range is [0,255] LimeNET-Micro default value is 30714 range is [0,65535]</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dacVal</parametername>
</parameternamelist>
<parameterdescription>
<para>DAC value (0-65535) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hydra/gnuradio/src/gr-limesdr/lib/source_impl.h" line="95" column="10"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>gr::limesdr::source</label>
        <link refid="classgr_1_1limesdr_1_1source"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>gr::limesdr::source_impl</label>
        <link refid="classgr_1_1limesdr_1_1source__impl"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>gr::block</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>gr::limesdr::source</label>
        <link refid="classgr_1_1limesdr_1_1source"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>gr::limesdr::source_impl</label>
        <link refid="classgr_1_1limesdr_1_1source__impl"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>gr::block</label>
      </node>
    </collaborationgraph>
    <location file="/home/hydra/gnuradio/src/gr-limesdr/lib/source_impl.h" line="32" column="1" bodyfile="/home/hydra/gnuradio/src/gr-limesdr/lib/source_impl.h" bodystart="32" bodyend="96"/>
    <listofallmembers>
      <member refid="classgr_1_1limesdr_1_1source__impl_1a716a9393ee9dc94eed9c16916ef469e0" prot="private" virt="non-virtual"><scope>gr::limesdr::source_impl</scope><name>add_tag</name></member>
      <member refid="classgr_1_1limesdr_1_1source__impl_1a50458c918f1c8b3f9eb4820e8d641aba" prot="private" virt="non-virtual"><scope>gr::limesdr::source_impl</scope><name>add_time_tag</name></member>
      <member refid="classgr_1_1limesdr_1_1source__impl_1a07098eb7f4add98d389ae95cb54fade0" prot="public" virt="non-virtual"><scope>gr::limesdr::source_impl</scope><name>args_to_io_signature</name></member>
      <member refid="classgr_1_1limesdr_1_1source__impl_1a4584770cfe93c08ec0f378cb5f630c86" prot="public" virt="virtual"><scope>gr::limesdr::source_impl</scope><name>calibrate</name></member>
      <member refid="classgr_1_1limesdr_1_1source__impl_1a0f695a287dc813fe50d182e14c5f2534" prot="public" virt="non-virtual"><scope>gr::limesdr::source_impl</scope><name>general_work</name></member>
      <member refid="classgr_1_1limesdr_1_1source__impl_1a4e36c31aa000bbe34affac5428c59dc7" prot="public" virt="non-virtual"><scope>gr::limesdr::source_impl</scope><name>init_stream</name></member>
      <member refid="classgr_1_1limesdr_1_1source_1ad7b46fccc48afd9145f40f915fe1144a" prot="public" virt="non-virtual"><scope>gr::limesdr::source_impl</scope><name>make</name></member>
      <member refid="classgr_1_1limesdr_1_1source__impl_1af93c06b7844ad76f20f39112a01f6d70" prot="private" virt="non-virtual"><scope>gr::limesdr::source_impl</scope><name>pktLoss</name></member>
      <member refid="classgr_1_1limesdr_1_1source__impl_1a81bfc4dcb1a78ad2d77e94e85ee15d96" prot="private" virt="non-virtual"><scope>gr::limesdr::source_impl</scope><name>print_stream_stats</name></member>
      <member refid="classgr_1_1limesdr_1_1source__impl_1a044dc8fe2b86a8c7ea118ac31cd5ee38" prot="public" virt="non-virtual"><scope>gr::limesdr::source_impl</scope><name>release_stream</name></member>
      <member refid="classgr_1_1limesdr_1_1source__impl_1a3bd6273b8795544fba229014cb910040" prot="public" virt="virtual"><scope>gr::limesdr::source_impl</scope><name>set_antenna</name></member>
      <member refid="classgr_1_1limesdr_1_1source__impl_1a409e68c0e1b907b49a43747aa33c77d6" prot="public" virt="virtual"><scope>gr::limesdr::source_impl</scope><name>set_bandwidth</name></member>
      <member refid="classgr_1_1limesdr_1_1source__impl_1a5d6347f8713ba77cd9f3b3868d2b0d86" prot="public" virt="virtual"><scope>gr::limesdr::source_impl</scope><name>set_buffer_size</name></member>
      <member refid="classgr_1_1limesdr_1_1source__impl_1a0faa1a284f11c6668299f51b4282e86d" prot="public" virt="virtual"><scope>gr::limesdr::source_impl</scope><name>set_center_freq</name></member>
      <member refid="classgr_1_1limesdr_1_1source__impl_1a364dc23ff74fdeceb2eb232d2b5a486d" prot="public" virt="virtual"><scope>gr::limesdr::source_impl</scope><name>set_digital_filter</name></member>
      <member refid="classgr_1_1limesdr_1_1source__impl_1a6678917ec79f432fd398b8e6d54d20d0" prot="public" virt="virtual"><scope>gr::limesdr::source_impl</scope><name>set_gain</name></member>
      <member refid="classgr_1_1limesdr_1_1source__impl_1a16a65efb2432da20a6305a2f65db9347" prot="public" virt="virtual"><scope>gr::limesdr::source_impl</scope><name>set_nco</name></member>
      <member refid="classgr_1_1limesdr_1_1source__impl_1a58d5481996ae1c17c2dfd9be38361914" prot="public" virt="virtual"><scope>gr::limesdr::source_impl</scope><name>set_oversampling</name></member>
      <member refid="classgr_1_1limesdr_1_1source__impl_1a0b5704a06ef83b5b1d446f2b3f40c61c" prot="public" virt="virtual"><scope>gr::limesdr::source_impl</scope><name>set_sample_rate</name></member>
      <member refid="classgr_1_1limesdr_1_1source__impl_1a7a839ff58c807cedc1ccd084c2d93088" prot="public" virt="virtual"><scope>gr::limesdr::source_impl</scope><name>set_tcxo_dac</name></member>
      <member refid="classgr_1_1limesdr_1_1source__impl_1a0ee763b6b767a9cc805351dd028baa8f" prot="private" virt="non-virtual"><scope>gr::limesdr::source_impl</scope><name>source_block</name></member>
      <member refid="classgr_1_1limesdr_1_1source__impl_1a1124c8f562e88826df36fa46bda7ee39" prot="public" virt="non-virtual"><scope>gr::limesdr::source_impl</scope><name>source_impl</name></member>
      <member refid="classgr_1_1limesdr_1_1source_1acd29e40524cea5fa2ec7c84464fc2054" prot="public" virt="non-virtual"><scope>gr::limesdr::source_impl</scope><name>sptr</name></member>
      <member refid="classgr_1_1limesdr_1_1source__impl_1abfba88826a968ba63f0eeebf38e3043e" prot="public" virt="non-virtual"><scope>gr::limesdr::source_impl</scope><name>start</name></member>
      <member refid="classgr_1_1limesdr_1_1source__impl_1a6479b02e895c7d3bd5225dd10d55a987" prot="public" virt="non-virtual"><scope>gr::limesdr::source_impl</scope><name>stop</name></member>
      <member refid="classgr_1_1limesdr_1_1source__impl_1a1771423bf669838608397929a9f05d88" prot="private" virt="non-virtual"><scope>gr::limesdr::source_impl</scope><name>stored</name></member>
      <member refid="classgr_1_1limesdr_1_1source__impl_1ab8d530b33deb1626d0f13d9fad4064a9" prot="private" virt="non-virtual"><scope>gr::limesdr::source_impl</scope><name>stream_analyzer</name></member>
      <member refid="classgr_1_1limesdr_1_1source__impl_1a0def2512e95ca8a5c630d1a8380d5644" prot="private" virt="non-virtual"><scope>gr::limesdr::source_impl</scope><name>streamId</name></member>
      <member refid="classgr_1_1limesdr_1_1source__impl_1a9ebaba3636a4623f0c44d9964171474f" prot="private" virt="non-virtual"><scope>gr::limesdr::source_impl</scope><name>t1</name></member>
      <member refid="classgr_1_1limesdr_1_1source__impl_1ac0e7880102cb9374e1d1d5cc73c2686f" prot="private" virt="non-virtual"><scope>gr::limesdr::source_impl</scope><name>t2</name></member>
      <member refid="classgr_1_1limesdr_1_1source__impl_1a7b8ed5da0a9851638328c5b652529523" prot="public" virt="non-virtual"><scope>gr::limesdr::source_impl</scope><name>~source_impl</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
