# auto-generated by grc.converter

id: limesdr_source
label: LimeSuite Source (RX)
category: '[LimeSuite]'
flags:
- throttle

parameters:
-   id: serial
    label: Device Serial
    dtype: string
    hide: none
-   id: filename
    label: File
    category: Advanced
    dtype: file_open
-   id: channel_mode
    label: Channel
    dtype: int
    default: '0'
    options: ['0', '1', '2']
    option_labels: [A, B, A+B (MIMO)]
    hide: part
-   id: rf_freq
    label: RF Frequency
    dtype: float
    default: 100e6
-   id: samp_rate
    label: Sample Rate
    dtype: float
    default: samp_rate
    hide: "${ ('all' if filename != \"\" else 'none')}"
-   id: oversample
    label: Oversample
    dtype: int
    default: '0'
    options: ['0', '1', '2', '4', '8', '16', '32']
    option_labels: [Default, '1', '2', '4', '8', '16', '32']
    hide: "${ ('all' if filename != \"\" else 'none')}"
-   id: dacVal
    label: TCXO DAC Value
    dtype: int
    default: '125'
    hide: "${ ('all' if allow_tcxo_dac == 0 else 'none')}"
-   id: nco_freq_ch0
    label: NCO Frequency
    category: Channel A
    dtype: float
    default: '0'
    hide: "${ ('all' if channel_mode == 1 else 'none')}"
-   id: calibr_bandw_ch0
    label: Calibration BW
    category: Channel A
    dtype: float
    default: 5e6
    hide: "${ ('all' if filename != \"\" or channel_mode == 1 else 'none')}"
-   id: lna_path_ch0
    label: LNA Path
    category: Channel A
    dtype: int
    default: '255'
    options: ['255', '1', '2', '3']
    option_labels: [Auto(Default), H, L, W]
    hide: "${ ('all' if channel_mode == 1 else 'none')}"
-   id: analog_bandw_ch0
    label: Analog Filter BW
    category: Channel A
    dtype: float
    default: 5e6
    hide: "${ ('all' if channel_mode == 1 else 'none')}"
-   id: digital_bandw_ch0
    label: Digital Filter BW
    category: Channel A
    dtype: float
    default: '0'
    hide: "${ ('all' if channel_mode == 1 else 'none')}"
-   id: gain_dB_ch0
    label: Gain (dB)
    category: Channel A
    dtype: int
    default: '30'
    hide: "${ ('all' if channel_mode == 1 else 'none')}"
-   id: nco_freq_ch1
    label: NCO Frequency
    category: Channel B
    dtype: float
    default: '0'
    hide: "${ ('all' if channel_mode == 0 else 'none')}"
-   id: calibr_bandw_ch1
    label: Calibration BW
    category: Channel B
    dtype: float
    default: 5e6
    hide: "${ ('all' if filename != \"\" or channel_mode == 0 else 'none')}"
-   id: lna_path_ch1
    label: LNA Path
    category: Channel B
    dtype: int
    default: '2'
    options: ['1', '2', '3']
    option_labels: [H, L, W]
    hide: "${ ('all' if channel_mode == 0 else 'none')}"
-   id: analog_bandw_ch1
    label: Analog Filter BW
    category: Channel B
    dtype: float
    default: 5e6
    hide: "${ ('all' if channel_mode == 0 else 'none')}"
-   id: digital_bandw_ch1
    label: Digital Filter BW
    category: Channel B
    dtype: float
    default: '0'
    hide: "${ ('all' if channel_mode == 0 else 'none')}"
-   id: gain_dB_ch1
    label: Gain (dB)
    category: Channel B
    dtype: int
    default: '30'
    hide: "${ ('all' if channel_mode == 0 else 'none')}"
-   id: allow_tcxo_dac
    label: Allow TCXO DAC Control
    category: Advanced
    dtype: int
    default: '0'
    options: ['1', '0']
    option_labels: ['Yes', 'No']
    hide: part

outputs:
-   domain: stream
    dtype: complex
    multiplicity: ${ channel_mode }
asserts:
- ${ channel_mode >= 0 }
- ${ 2 >= channel_mode }
- ${ rf_freq > 0 }
- ${ calibr_bandw_ch0 >= 2.5e6 or calibr_bandw_ch0 == 0 }
- ${ 120e6 >= calibr_bandw_ch0 }
- ${ calibr_bandw_ch1 >= 2.5e6 or calibr_bandw_ch1 == 0 }
- ${ 120e6 >= calibr_bandw_ch1 }
- ${ analog_bandw_ch0 >= 1.5e6 or analog_bandw_ch0 == 0 }
- ${ 130e6 >= analog_bandw_ch0 }
- ${ analog_bandw_ch1 >= 1.5e6 or analog_bandw_ch1 == 0 }
- ${ 130e6 >= analog_bandw_ch1 }
- ${ digital_bandw_ch0 >= 0 }
- ${ samp_rate >= digital_bandw_ch0 or digital_bandw_ch0 == 0 }
- ${ digital_bandw_ch1 >= 0 }
- ${ samp_rate >= digital_bandw_ch1 or digital_bandw_ch0 == 0 }
- ${ gain_dB_ch0 >= 0 }
- ${ 73 >= gain_dB_ch0 }
- ${ gain_dB_ch1 >= 0 }
- ${ 73 >= gain_dB_ch1 }
- ${ samp_rate > 0 }
- ${ 61.44e6 >= samp_rate }

templates:
    imports: import gnuradio.limesdr as limesdr
    make: "limesdr.source(${serial}, ${channel_mode}, ${filename})\n% if filename\
        \ == \"\":\nself.${id}.set_sample_rate(${samp_rate})\n% if oversample > 0:\n\
        self.${id}.set_oversampling(${oversample})\n% endif\nself.${id}.set_center_freq(${rf_freq},\
        \ 0)\n% if analog_bandw_ch0 > 0 and (channel_mode == 0 or channel_mode ==\
        \ 2):\nself.${id}.set_bandwidth(${analog_bandw_ch0},0)\n% endif\n% if analog_bandw_ch1\
        \ > 0 and channel_mode > 0:\nself.${id}.set_bandwidth(${analog_bandw_ch1},1)\n\
        % endif\n% if digital_bandw_ch0 > 0 and (channel_mode == 0 or channel_mode\
        \ == 2):\nself.${id}.set_digital_filter(${digital_bandw_ch0},0)\n% endif\n\
        % if digital_bandw_ch1 > 0 and channel_mode > 0:\nself.${id}.set_digital_filter(${digital_bandw_ch1},1)\n\
        % endif\n% if channel_mode == 0 or channel_mode == 2:\nself.${id}.set_gain(${gain_dB_ch0},0)\n\
        % endif\n% if channel_mode > 0:\nself.${id}.set_gain(${gain_dB_ch1},1)\n%\
        \ endif\n% if channel_mode == 0 or channel_mode == 2:\nself.${id}.set_antenna(${lna_path_ch0},0)\n\
        % endif\n% if channel_mode > 0:\nself.${id}.set_antenna(${lna_path_ch1},1)\n\
        % endif\n% if calibr_bandw_ch0 > 0 and (channel_mode == 0 or channel_mode\
        \ == 2):\nself.${id}.calibrate(${calibr_bandw_ch0}, 0)\n% endif\n% if calibr_bandw_ch1\
        \ > 0 and channel_mode > 0:\nself.${id}.calibrate(${calibr_bandw_ch1}, 1)\n\
        % endif\n% if nco_freq_ch0 != 0 and (channel_mode == 0 or channel_mode ==\
        \ 2):\nself.${id}.set_nco(${nco_freq_ch0},0)\n% endif\n% if nco_freq_ch1 !=\
        \ 0 and channel_mode > 0:\nself.${id}.set_nco(${nco_freq_ch1},1)\n% endif\n\
        % endif\n% if allow_tcxo_dac == 1:\nself.${id}.set_tcxo_dac(${dacVal})\n%\
        \ endif\n    "
    callbacks:
    - set_center_freq(${rf_freq}, 0)
    - set_antenna(${lna_path_ch0},0)
    - set_antenna(${lna_path_ch1},1)
    - set_nco(${nco_freq_ch0},0)
    - set_nco(${nco_freq_ch1},1)
    - set_bandwidth(${analog_bandw_ch0},0)
    - set_bandwidth(${analog_bandw_ch1},1)
    - set_digital_filter(${digital_bandw_ch0},0)
    - set_digital_filter(${digital_bandw_ch1},1)
    - set_gain(${gain_dB_ch0},0)
    - set_gain(${gain_dB_ch1},1)
    - set_tcxo_dac(${dacVal})

documentation: "-------------------------------------------------------------------------------------------------------------------\n\
    DEVICE SERIAL\n\nDevice serial number obtained by running\n\n\tLimeUtil --find\n\
    \nIf left blank, the first device in the list is used.\n-------------------------------------------------------------------------------------------------------------------\n\
    CHANNEL\n\nUse this setting to choose between SISO channels or MIMO mode.\n\n\
    Note: not all devices support MIMO mode and have more than one channel.\n-------------------------------------------------------------------------------------------------------------------\n\
    RF FREQUENCY\n\nSet RF center frequency for RX (both channels).\nLimeSDR-USB supports\
    \ \t  [100e3,3800e6] \tHz.\nLimeSDR-PCIe supports \t[100e3,3800e6] \tHz.\nLimeSDR-Mini\
    \ supports \t[10e6,3500e6] \tHz.\nLimeSDR-Micro supports \t[10e6,3500e6] \tHz.\n\
    -------------------------------------------------------------------------------------------------------------------\n\
    SAMPLE RATE\n\nHere you can enter sample rate for RX.\n\nLimeSDR-USB sample rate\
    \ must be no more than 61.44e6 S/s.\nLimeSDR-PCIe sample rate must be no more\
    \ than 61.44e6 S/s.\nLimeSDR-Mini sample rate must be no more than 30.72e6 S/s.\n\
    LimeSDR-Micro sample rate must be no more than 10e6 S/s.\n\nNote: LimeSDR-Mini\
    \ and LimeSDR-Micro supports only the same sample rate for TX and RX.\n-------------------------------------------------------------------------------------------------------------------\n\
    OVERSAMPLE\n\nHere you can select oversampling value for RX. Default value uses\
    \ highest possible oversampling value.\n\nNote: LimeSDR-Mini and LimeSDR-Micro\
    \ supports only the same oversampling value for TX and RX.\n-------------------------------------------------------------------------------------------------------------------\n\
    NCO FREQUENCY\n\nAdjust numerically controlled oscillator for each channel. 0\
    \ means that NCO is OFF.\n-------------------------------------------------------------------------------------------------------------------\n\
    CALIBRATION BANDW.\n\nThis setting is used to set bandwidth for calibration for\
    \ each channel. This value should be equal to your signal bandwidth.\nCalibration\
    \ is off when bandwidth is set to 0.\n\nCalibration bandwidth range must be [2.5e6,120e6]\
    \ Hz.\n-------------------------------------------------------------------------------------------------------------------\n\
    LNA PATH\n\nSelect active low-noise amplifier path of each channel.\nFor LimeSDR-Mini\
    \ and LimeNET-Micro Auto(Default) option sets preferred LNA path depending on\
    \ RF frequency.\nFor LimeSDR-USB and LimeSDR-PCIe Auto(Default) sets LNA path\
    \ to LNAL.\n-------------------------------------------------------------------------------------------------------------------\n\
    ANALOG FILTER BANDW.\n\nEnter analog filter bandwidth for each channel. Analog\
    \ filter is off if bandwidth is set to 0.\nAnalog filter bandwidth range must\
    \ be [1.5e6,130e6] Hz.\n-------------------------------------------------------------------------------------------------------------------\n\
    DIGITAL FILTER BANDW.\n\nEnter digital filter bandwidth for each channel. Digital\
    \ filter if off if bandwidth is set to 0.\nBandwidth should not be higher than\
    \ sample rate.\n-------------------------------------------------------------------------------------------------------------------\n\
    GAIN\n\nControls combined RX gain settings. Gain range must be [0,73] dB.\n-------------------------------------------------------------------------------------------------------------------\n\
    FILE\n\nThis setting is available in \"Advanced\" tab of grc block. \nUse .ini\
    \ file generated by LimeSuiteGUI to configure the device.\nRF frequency, sampling\
    \ rate, oversampling, filters, gain and antenna settings won't be used from GRC\
    \ blocks when \ndevice is started. Runtime variables(RF frequency, gain...) can\
    \ still be modified when flowgraph is running.\n\nNote: setting must match in\
    \ LimeSuite Source and Sink for the same device.\n-------------------------------------------------------------------------------------------------------------------\n\
    TCXO DAC\n\nControls 40 MHz TCXO DAC settings.  To enable this parameter \"Allow\
    \ TCXO DAC control\" in the \"Advanced\" tab must be set to \"Yes\"\nCare must\
    \ be taken as this parameter is returned to default value only after power off.\n\
    \nLimeSDR-Mini default value is 180 range is [0,255]\nLimeSDR-USB default value\
    \ is 125 range is [0,255]\nLimeSDR-PCIe default value is 134 range is [0,255]\n\
    LimeNET-Micro default value is 30714 range is [0,65535]\n-------------------------------------------------------------------------------------------------------------------"

file_format: 1
